export default function ActionsBar({ href }) {
  return (
    <div className="actions--bar">
      <div className="wrap">
        <a className="button" href="update-course.html">
          Update Course
        </a>
        <a className="button" href="#">
          Delete Course
        </a>
        <a className="button button-secondary" href="index.html">
          Return to List
        </a>
      </div>
    </div>
  );
}
export default function Course({ courseTitle }) {
  return (
    <div className="course--module course--link">
      <h2 className="course--label">Course</h2>
      <h3 className="course--title">{courseTitle}</h3>
    </div>
  );
}
export default function CourseCreate({}) {
  return (
    <>
      <div className="validation--errors">
        <h3>Validation Errors</h3>
        <ul>
          <li>Please provide a value for "Title"</li>
          <li>Please provide a value for "Description"</li>
        </ul>
      </div>
      <form>
        <div className="main--flex">
          <div>
            <label forHtml="courseTitle">Course Title</label>
            <input
              id="courseTitle"
              name="courseTitle"
              type="text"
              defaultValue=""
            />

            <p>By Joe Smith</p>

            <label forHtml="courseDescription">Course Description</label>
            <textarea
              id="courseDescription"
              name="courseDescription"
            ></textarea>
          </div>
          <div>
            <label forHtml="estimatedTime">Estimated Time</label>
            <input
              id="estimatedTime"
              name="estimatedTime"
              type="text"
              defaultValue=""
            />

            <label forHtml="materialsNeeded">Materials Needed</label>
            <textarea id="materialsNeeded" name="materialsNeeded"></textarea>
          </div>
        </div>
        <button className="button" type="submit">
          Create Course
        </button>
        <button
          className="button button-secondary"
          onClick={(event) => {
            event.preventDefault();
            location.href = "index.html";
          }}
        >
          Cancel
        </button>
      </form>
    </>
  );
}
export default function CourseDetail({
  courseTitle,
  courseAuthor,
  courseTime,
  materialItems,
  courseDescription,
}) {
  return (
    <form>
      <div className="main--flex">
        <div>
          <h3 className="course--detail--title">Course</h3>
          <h4 className="course--name">{courseTitle}</h4>
          <p>By {courseAuthor} </p>

          {courseDescription}
        </div>
        <div>
          <h3 className="course--detail--title">Estimated Time</h3>
          <p>{courseTime}</p>

          <h3 className="course--detail--title">Materials Needed</h3>
          <ul className="course--detail--list">
            {materialItems.map((item, index) => (
              <li key={index}>{item}</li>
            ))}
          </ul>
        </div>
      </div>
    </form>
  );
}
import { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import Course from "./Course";
import NewCourse from "./CourseNew";

// const courses = [
//   { href: "course-detail.html", title: "Build a Basic Bookcase" },
//   { href: "course-detail.html", title: "Learn How to Program" },
//   { href: "course-detail.html", title: "Learn How to Test Program" },
// ];

export default function CourseList() {
  // utilize useState hook for the courses array
  const [courses, setCourses] = useState([]);

  // create a useEffect hook that will fetch the courses from
  // the api. Ensure it only runs once with an empty dependency array

  useEffect(() => {
    const fetchCourses = async () => {
      try {
        const response = await fetch("http://localhost:5000/api/courses");
        const data = await response.json();
        if (Array.isArray(data)) {
          setCourses(data);
        } else {
          console.error("Data is not an array", data);
        }
      } catch (error) {
        console.error("error fetching courses:", error);
      }
    };
    fetchCourses();
  }, []);
  return (
    <div className="wrap main--grid">
      {courses.map((course, index) => (
        <Link to={`/courses/${course.id}`} key={index}>
          <Course href={`courses/${course.id}`} courseTitle={course.title} />
        </Link>
      ))}
      <NewCourse />
    </div>
  );
}
export default function NewCourse({ href = "create-course.html" }) {
  return (
    <a className="course--module course--add--module" href={href}>
      <span className="course--add--title">
        <svg
          version="1.1"
          xmlns="http://www.w3.org/2000/svg"
          x="0px"
          y="0px"
          viewBox="0 0 13 13"
          className="add"
        >
          <polygon points="7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 "></polygon>
        </svg>
        New Course
      </span>
    </a>
  );
}
export default function CourseUpdate({
  courseAuthor,
  courseDescription,
  materialItems,
  courseTime,
  courseTitle,
}) {
  return (
    <form>
      <div className="main--flex">
        <div>
          <label htmlFor="courseTitle">Course Title</label>
          <input
            id="courseTitle"
            name="courseTitle"
            type="text"
            defaultValue={courseTitle}
          />

          <p>By {courseAuthor} </p>

          <label htmlFor="courseDescription">Course Description</label>
          <textarea
            id="courseDescription"
            name="courseDescription"
            defaultValue={courseDescription}
          ></textarea>
        </div>
        <div>
          <label htmlFor="estimatedTime">Estimated Time</label>
          <input
            id="estimatedTime"
            name="estimatedTime"
            type="text"
            defaultValue={courseTime}
          />

          <label htmlFor="materialsNeeded">Materials Needed</label>
          <textarea
            id="materialsNeeded"
            name="materialsNeeded"
            defaultValue={materialItems}
          ></textarea>
        </div>
      </div>
      <button className="button" type="submit">
        Update Course
      </button>
      <button
        className="button button-secondary"
        onClick={(event) => {
          event.preventDefault();
          location.href = "index.html";
        }}
      >
        Cancel
      </button>
    </form>
  );
}
export default function Error({ errorMessage }) {
  return <p>{errorMessage}</p>;
}
const isSignedIn = true;

export default function Header({ href, Username = "Joe Smith" }) {
  return (
    <header>
      <div className="wrap header--flex">
        <h1 className="header--logo">
          <a href="">Courses</a>
        </h1>
        <nav>
          {isSignedIn ? (
            <ul className="header--signedin">
              <li>Welcome, {Username}!</li>
              <li>
                <a href="">Sign Out</a>
              </li>
            </ul>
          ) : (
            <ul className="header--signedout">
              <li>
                <a href="">Sign Up</a>
              </li>
              <li>
                <a href="">Sign In</a>
              </li>
            </ul>
          )}
        </nav>
      </div>
    </header>
  );
}
import CourseList from "./CourseList";

export default function MainComponent({ children }) {
  return <main>{children}</main>;
}
export default function PageWrapper({ className, title, children }) {
  return (
    <div className={className}>
      <h2>{title}</h2>
      {children}
    </div>
  );
}
export default function SignUp() {
  return (
    <>
      <form>
        <label forHtml="emailAddress">Email Address</label>
        <input
          id="emailAddress"
          name="emailAddress"
          type="email"
          defaultValue=""
        />
        <label forHtml="password">Password</label>
        <input id="password" name="password" type="password" defaultValue="" />
        <button className="button" type="submit">
          Sign In
        </button>
        <button
          className="button button-secondary"
          onClick={(event) => {
            event.preventDefault();
            location.href = "index.html";
          }}
        >
          Cancel
        </button>
      </form>
      <p>
        Don't have a user account? Click here to{" "}
        <a href="sign-up.html">sign up</a>!
      </p>
    </>
  );
}
export default function SignUp() {
  return (
    <>
      <form>
        <label htmlFor="firstName">First Name</label>
        <input id="firstName" name="firstName" type="text" defaultValue="" />
        <label htmlFor="lastName">Last Name</label>
        <input id="lastName" name="lastName" type="text" defaultValue="" />
        <label htmlFor="emailAddress">Email Address</label>
        <input
          id="emailAddress"
          name="emailAddress"
          type="email"
          defaultValue=""
        />
        <label htmlFor="password">Password</label>
        <input id="password" name="password" type="password" defaultValue="" />
        <button className="button" type="submit">
          Sign Up
        </button>
        <button
          className="button button-secondary"
          onClick={(event) => {
            event.preventDefault();
            location.href = "index.html";
          }}
        >
          Cancel
        </button>
      </form>

      <p>
        Already have a user account? Click here to{" "}
        <a href="sign-in.html">sign in</a>!
      </p>
    </>
  );
}
